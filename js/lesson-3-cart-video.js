// ========================================================================================
// Работа с корзиной товара (объект cart)
// ========================================================================================
// Свойства объекта :
// items [] - массив товаров. Каждый товар - объект {name, price}.
//      Количество меняется :
//      При добавлении товара для каждого товара устанавливается значение quantity = 1
// Методы объекта :
// getItem() - получение перечня товаров в корзине -
// addItem(product) - добавление товара в корзину
// removeItem(productName) - удаление товара из корзины
// clearCart() - очистка корзины товара
// countTotalPrice() - Расчет общей стоимости товаров
// increaseQuantity() - увеличение количества товара
// decreaseQuantity() - уменьшение количества товара
//
// ----------------------------------------------------------------------------------------

const cart = {

    // Массив товаров. Каждый товар - объект {name, price}
    items: [],

    // Получение массива товаров в корзине
    getItem() { 
        return this.items;
    },

    // Добавление товара в корзину
    addItem(product) {
        // -----------------------------------------------------------------------------------------------
        // Вариант метода Саши Репеты
        // -----------------------------------------------------------------------------------------------
        console.table(this.items);

        // Переборка корзины на поиск продукта, есть ли он в корзине
        for (const item of this.items) {
            // Если продукт с таким именем уже существует
            if (item.name === product.name) {
                // То добавляем количество и выходим
                item.quantity = item.quantity + 1;
                return;
            } 
        }

        // Если в корзине еще нет продуктов, то добавляем новый продукт
        // Объект нового продукта
        const newProduct = {
                    // Вставка в объект нового товара всех свойств, передаваемых в метод 
                    // + со свойством количество товара = 1
                    ...product,
                    quantity: 1,
        };
        
        // Добавление нового продукта в корзину
        this.items.push(newProduct);
    

        // -----------------------------------------------------------------------------------------------

        // -----------------------------------------------------------------------------------------------
        // Мой вариант метода - 
        // -----------------------------------------------------------------------------------------------
        // Если этот продукт есть в корзине - увеличиваем количество на 1
        // product.quantity += 1;
        // Если этого продукта нет в корзине
        //      product.quantity = 1;
        // Добавление нового продукта в корзину
        //      this.items.push(product);
        // -----------------------------------------------------------------------------------------------
    },

    // Удаление товара из корзины (поиск по имени)
    removeItem(productName) {

        // Деструктуризация (распаковка в переменную) массива  items  из  вызывающего  объекта  this
        // В переменной  items  лежит ссылка на оригинальный массива (так как массив - сложный тип)
        const { items } = this;

        // Переборка всех товаров в массиве по индексу
        for (let i = 0; i < items.length; i++) {
            // Можно сделать локальную переменную для упрощения записи :
            const item = items[i];
            // Поиск по наименованию необходимого товара
            if (item.name === productName) {
                console.log(`Удаление товара - ${productName}`);
                // Удаление товара по индексу
                items.splice(i, 1);
            }
        }    
    },

    // Oчистка корзины товара
    clearCart() { 
        // -----------------------------------------------------------------------------------------------
        // Простой вариант очистки массива
        // -----------------------------------------------------------------------------------------------
        this.items = [];
        // -----------------------------------------------------------------------------------------------
        // Сложный вариант
        // -----------------------------------------------------------------------------------------------
        // Определяем количество товаров в корзине
        //    const itemsLenght = this.items.length;
        // Удаление из массива элементов, начиная с 0 позизии и количество элементов, равное длине массива
        //    this.items.splice(0, itemsLenght);
        // -----------------------------------------------------------------------------------------------
    },

    // Расчет общей стоимости товаров
    countTotalPrice() { 
        // -----------------------------------------------------------------------------------------------
        // Мой вариант метода
        // -----------------------------------------------------------------------------------------------
        //    let totalPrice = 0;
        //    for (let i = 0; i < this.items.length; i++) {
        //        totalPrice = totalPrice+this.items[i].price * this.items[i].quantity;
        //    };
        //    return totalPrice;
        // -----------------------------------------------------------------------------------------------

        // -----------------------------------------------------------------------------------------------
        // Вариан Саши Репеты
        // -----------------------------------------------------------------------------------------------
        // Деструктуризация (распаковка в переменную) массива  items  из  вызывающего  объекта  this
        // В переменной  items  лежит ссылка на оригинальный массива (так как массив - сложный тип)
        const { items } = this;
        
        let totalPrice = 0;
        // Сразу в объявлении цикла дектруктуризируем (распаковываем свойства price & quantity )
        // из объекта текущей итерации
        for (const {price,quantity} of items) {
            totalPrice = totalPrice + (price * quantity);
        }
        // Возвращаем общую стоимость товара
        return totalPrice;
        // -----------------------------------------------------------------------------------------------
    },

    // Увеличение количества товара
    increaseQuantity(productName) { 
        // Деструктуризация (распаковка в переменную) массива  items  из  вызывающего  объекта  this
        // В переменной  items  лежит ссылка на оригинальный массива (так как массив - сложный тип)
        const { items } = this;

        // Переборка всех товаров в массиве по индексу
        for (let i = 0; i < items.length; i++) {
            // Можно сделать локальную переменную для упрощения записи :
            const item = items[i];
            // Поиск по наименованию необходимого товара
            if (item.name === productName) {
                console.log(`Увеличение количества товара - ${productName}`);
                // Увеличение количества товара
                item.quantity += 1;
            }
        }   
        
    },

    // Уменьшение количества товара
    decreaseQuantity(productName) { 
        // Деструктуризация (распаковка в переменную) массива  items  из  вызывающего  объекта  this
        // В переменной  items  лежит ссылка на оригинальный массива (так как массив - сложный тип)
        const { items } = this;

        // Переборка всех товаров в массиве по индексу
        for (let i = 0; i < items.length; i++) {
            // Можно сделать локальную переменную для упрощения записи :
            const item = items[i];
            // Поиск по наименованию необходимого товара
            if (item.name === productName) {
                console.log(`Уменьшение количества товара - ${productName}`);

                if (item.quantity > 1) {
                    // Уменьшение количества товара
                    item.quantity -= 1;
                } else {
                    // Удаление товара по имени
                    this.removeItem(item.name);
                }
                
                return;
            }
        }   
        
        
    },
}


// Объект для добавления в корзину товаров - товар с характеристиками (имя и цена)
let prod = {};

prod = { name: 'Яблоко', price: 100, };
// Вызов метода - добавление товара в корзину
cart.addItem(prod);

// Объект для добавления в корзину товаров - товар с характеристиками (имя и цена)
prod = { name: 'Слива', price: 50, };
// Вызов метода - добавление товара в корзину
cart.addItem(prod);

// Объект для добавления в корзину товаров - товар с характеристиками (имя и цена)
prod = { name: 'Слива', price: 50, };
// Вызов метода - добавление товара в корзину
cart.addItem(prod);

// Объект для добавления в корзину товаров - товар с характеристиками (имя и цена)
prod = { name: 'Груша', price: 200, };
// Вызов метода - добавление товара в корзину
cart.addItem(prod);


// Вызов метода - получение перечня товаров в корзине
console.table(cart.getItem());
// Вызов метода - Расчет общей стоимости товара
console.log('Общая стоимость : ', cart.countTotalPrice());

// Вызов метода - удаление товара из корзины
cart.removeItem('Груша');

// Вызов метода - получение перечня товаров в корзине
console.table(cart.getItem());
// Вызов метода - Расчет общей стоимости товара
console.log('Общая стоимость : ', cart.countTotalPrice());

// Вызов метода - Очистка корзины - удаление всех товаров из корзины
// cart.clearCart();

// Вызов метода - получение перечня товаров в корзине после очистки корзины
// console.log(cart.getItem());

// Увеличение количества товара
cart.increaseQuantity('Слива');
// Вызов метода - получение перечня товаров в корзине
console.table(cart.getItem());
// Вызов метода - Расчет общей стоимости товара
console.log('Общая стоимость : ', cart.countTotalPrice());

// Уменьшение количества товара
cart.decreaseQuantity('Слива');
// Вызов метода - получение перечня товаров в корзине
console.table(cart.getItem());
// Вызов метода - Расчет общей стоимости товара
console.log('Общая стоимость : ', cart.countTotalPrice());

// Уменьшение количества товара
cart.decreaseQuantity('Яблоко');
// Вызов метода - получение перечня товаров в корзине
console.table(cart.getItem());
// Вызов метода - Расчет общей стоимости товара
console.log('Общая стоимость : ', cart.countTotalPrice());





// ----------------------------------------------------------------------------------------


// ========================================================================================
//
// ========================================================================================
//
// ----------------------------------------------------------------------------------------


// ----------------------------------------------------------------------------------------